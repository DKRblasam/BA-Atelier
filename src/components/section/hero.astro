---
// src/components/HeroSection.astro
---

<section class="hero-section">
  <div class="container">
    <div class="content">
      <h1 class="brand-title">Alta</h1>

      <div class="main-content">
        <h2 class="service-title">Costura</h2>
        <h3 class="exclusive-text">Exclusiva</h3>

        <p class="description">
          Donde cada prenda es una obra de arte creada con pasión y atención al
          detalle
        </p>

        <div class="buttons">
          <button class="btn-primary">
            <span>Explorar Colección</span>
            <svg
              class="heart-icon"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
            >
              <path
                d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"
              ></path>
            </svg>
          </button>

          <button class="btn-secondary"> Consulta Personalizada </button>
        </div>
      </div>

      <button class="scroll-indicator">
        <svg viewBox="0 0 24 24" fill="none" stroke="currentColor">
          <polyline points="6,9 12,15 18,9"></polyline>
        </svg>
      </button>

      <div class="navigation-dots">
        <span class="dot active" data-index="0"></span>
        <span class="dot" data-index="1"></span>
        <span class="dot" data-index="2"></span>
      </div>
      <br />
    </div>
  </div>
</section>

<style>
  .hero-section {
    min-height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 2rem;
    position: relative;
    font-family: "Georgia", "Times New Roman", serif;
  }

  .container {
    max-width: 800px;
    width: 100%;
  }

  .content {
    text-align: center;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 2rem;
  }

  .brand-title {
    font-size: clamp(3rem, 8vw, 6rem);
    font-weight: 400;
    color: #2c2c2c;
    margin: 0;
    font-style: italic;
    letter-spacing: -0.02em;
  }

  .main-content {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1.5rem;
  }

  .service-title {
    font-size: clamp(2.5rem, 6vw, 4.5rem);
    font-weight: 300;
    color: #af7d58;
    margin: 0;
    font-style: italic;
    letter-spacing: -0.01em;
  }

  .exclusive-text {
    font-size: clamp(1.2rem, 3vw, 1.8rem);
    font-weight: 400;
    color: #2c2c2c;
    margin: 0;
    font-style: italic;
    letter-spacing: 0.1em;
  }

  .description {
    font-size: clamp(0.9rem, 2.5vw, 1.1rem);
    color: #666;
    line-height: 1.6;
    max-width: 500px;
    margin: 1rem 0;
    font-weight: 300;
  }

  .buttons {
    display: flex;
    gap: 1.5rem;
    flex-wrap: wrap;
    justify-content: center;
    margin-top: 1rem;
  }

  .btn-primary {
    background: #2c2c2c;
    color: white;
    border: none;
    padding: 1rem 2rem;
    border-radius: 50px;
    font-size: 1rem;
    font-weight: 400;
    cursor: pointer;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-family: inherit;
  }

  .btn-primary:hover {
    background: #1a1a1a;
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
  }

  .heart-icon {
    width: 18px;
    height: 18px;
    stroke-width: 2;
  }

  .btn-secondary {
    background: transparent;
    color: #825837;
    border: 2px solid #a5724bc7;
    padding: 1rem 2rem;
    border-radius: 50px;
    font-size: 1rem;
    font-weight: 400;
    cursor: pointer;
    transition: all 0.3s ease;
    font-family: inherit;
    background: #c49b7c3b;
  }

  .btn-secondary:hover {
    background: #c49b7c;
    color: white;
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(196, 155, 124, 0.3);
  }

  .navigation-dots {
    display: flex;
    gap: 0.8rem;
    margin-top: 2rem;
  }

  .dot {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    background: #d0d0d0;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .dot.active {
    background: #c49b7c;
  }

  .dot:hover {
    background: #c49b7c;
    transform: scale(1.2);
  }

  .scroll-indicator {
    position: absolute;
    bottom: 2rem;
    left: 50%;
    transform: translateX(-50%);
    background: none;
    border: none;
    cursor: pointer;
    padding: 0.5rem;
    opacity: 0.6;
    transition: all 0.3s ease;
  }

  .scroll-indicator:hover {
    opacity: 1;
    transform: translateX(-50%) translateY(5px);
  }

  .scroll-indicator svg {
    width: 24px;
    height: 24px;
    stroke: #666;
    stroke-width: 2;
    animation: bounce 2s infinite;
  }

  @keyframes bounce {
    0%,
    20%,
    50%,
    80%,
    100% {
      transform: translateY(0);
    }
    40% {
      transform: translateY(-10px);
    }
    60% {
      transform: translateY(-5px);
    }
  }

  /* Responsive adjustments */
  @media (max-width: 768px) {
    .hero-section {
      padding: 1rem;
    }

    .buttons {
      flex-direction: column;
      align-items: center;
      gap: 1rem;
    }

    .btn-primary,
    .btn-secondary {
      width: 100%;
      max-width: 280px;
      justify-content: center;
    }

    .content {
      gap: 1.5rem;
    }

    .main-content {
      gap: 1rem;
    }
  }

  @media (max-width: 480px) {
    .description {
      font-size: 0.9rem;
      padding: 0 1rem;
    }

    .navigation-dots {
      margin-top: 1.5rem;
    }
  }
</style>

<script>
  // Funcionalidad para cambiar entre dots
  document.addEventListener("DOMContentLoaded", function () {
    const dots = document.querySelectorAll(".dot");

    dots.forEach((dot, index) => {
      dot.addEventListener("click", function () {
        // Remover clase active de todos los dots
        dots.forEach((d) => d.classList.remove("active"));

        // Agregar clase active al dot clickeado
        this.classList.add("active");

        // Opcional: Aquí puedes agregar lógica para cambiar contenido
        // Por ejemplo, cambiar imágenes de fondo, texto, etc.
        console.log(`Dot ${index + 1} selected`);
      });
    });

    // Auto-cambio cada 5 segundos (opcional)
    let currentDot = 0;
    const totalDots = dots.length;

    function autoChangeDots() {
      dots.forEach((d) => d.classList.remove("active"));
      currentDot = (currentDot + 1) % totalDots;
      dots[currentDot].classList.add("active");
    }

    // Auto-cambio activado cada 4 segundos
    setInterval(autoChangeDots, 4000);
  });
</script>
